#!/usr/bin/env node

const app = require('../app')
const debug = require('debug')('http:server')
const http = require('http')

const server = http.createServer(app)
server.listen(process.env.PORT || '3000')
server.on('error', onError)
server.on('listening', onListening)

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const addr = server.address()
  const bind = typeof addr.port === 'string'
    ? 'Pipe ' + addr.port
    : 'Port ' + addr.port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}
